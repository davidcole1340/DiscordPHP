name: Unit Tests
on:
  push:
  repository_dispatch:
    types: [ok-to-test-command]
jobs:
  ci-master:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.event.repository.full_name == github.repository
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          TEST_CHANNEL: ${{ secrets.TEST_CHANNEL }}
          TEST_CHANNEL_NAME: ${{ secrets.TEST_CHANNEL_NAME }}
      - name: PHP 7.4
        uses: ./.github/actions/php7.4
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          TEST_CHANNEL: ${{ secrets.TEST_CHANNEL }}
          TEST_CHANNEL_NAME: ${{ secrets.TEST_CHANNEL_NAME }}
      - name: PHP 7.3
        uses: ./.github/actions/php7.3
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          TEST_CHANNEL: ${{ secrets.TEST_CHANNEL }}
          TEST_CHANNEL_NAME: ${{ secrets.TEST_CHANNEL_NAME }}
  dump_test:
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch'
    steps:
    - name: Dump
      env:
        CONTENT: ${{ toJson(github.event.client_payload) }}
      run: echo "$CONTENT"
  ci-fork:
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch'
    steps:
      - name: Checkout PR
        uses: actions/checkout@v2
        with:
          ref: 'refs/pull/${{ github.event.client_payload.pull_request.number }}/merge'
      - name: PHP 7.4
        uses: ./.github/actions/php7.4
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          TEST_CHANNEL: ${{ secrets.TEST_CHANNEL }}
          TEST_CHANNEL_NAME: ${{ secrets.TEST_CHANNEL_NAME }}
      - uses: actions/github-script@v1
        id: update-check-run
        if: ${{ always() }}
        env:
          number: ${{ github.event.client_payload.pull_request.number }}
          job: ${{ github.job }}
          conclusion: ${{ job.status }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pull } = await github.pulls.get({
              ...context.repo,
              pull_number: process.env.number
            });
            console.log('Pull', pull);
            const ref = pull.head.sha;
            console.log('Ref', ref);
            const { data: checks } = await github.checks.listForRef({
              ...context.repo,
              ref
            });
            console.log('Checks', checks);
            const check = checks.check_runs.filter(c => c.name === process.env.job);
            const { data: result } = await github.checks.update({
              ...context.repo,
              check_run_id: check[0].id,
              status: 'completed',
              conclusion: process.env.conclusion
            });
            return result;

